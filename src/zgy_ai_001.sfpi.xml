<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_SFPI" serializer_version="v1.0.0">
 <asx:abap version="1.0" xmlns:asx="http://www.sap.com/abapxml">
  <asx:values>
   <VERSION>1</VERSION>
   <TYPE/>
   <INTERFACE href="#o1"/>
   <INTERFACET>
    <FPINTERFACET>
     <NAME/>
     <STATE/>
     <LANGUAGE>T</LANGUAGE>
     <ID/>
     <TEXT>dynamic table adobe</TEXT>
    </FPINTERFACET>
   </INTERFACET>
  </asx:values>
  <asx:heap xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:abap="http://www.sap.com/abapxml/types/built-in" xmlns:cls="http://www.sap.com/abapxml/classes/global" xmlns:dic="http://www.sap.com/abapxml/types/dictionary">
   <cls:CL_FP_INTERFACE_DATA id="o1">
    <CL_FP_INTERFACE_DATA classVersion="1">
     <CODING href="#o5"/>
     <PARAMETERS href="#o4"/>
     <GLOBAL_DEFINITIONS href="#o3"/>
     <REFERENCE_FIELDS href="#o2"/>
     <XSD_DEFINITIONS/>
    </CL_FP_INTERFACE_DATA>
   </cls:CL_FP_INTERFACE_DATA>
   <cls:CL_FP_REFERENCE_FIELDS id="o2">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_REFERENCE_FIELDS classVersion="1">
     <REFERENCE_FIELDS/>
    </CL_FP_REFERENCE_FIELDS>
   </cls:CL_FP_REFERENCE_FIELDS>
   <cls:CL_FP_GLOBAL_DEFINITIONS id="o3">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_GLOBAL_DEFINITIONS classVersion="1">
     <GLOBAL_DATA/>
     <TYPES/>
     <FIELDSYMBOLS/>
    </CL_FP_GLOBAL_DEFINITIONS>
   </cls:CL_FP_GLOBAL_DEFINITIONS>
   <cls:CL_FP_PARAMETERS id="o4">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_PARAMETERS classVersion="1">
     <IMPORT_PARAMETERS>
      <SFPIOPAR>
       <NAME>P_TAB</NAME>
       <TYPING>TYPE</TYPING>
       <TYPENAME>TABNAME</TYPENAME>
       <OPTIONAL>X</OPTIONAL>
       <BYVALUE>X</BYVALUE>
       <DEFAULTVAL/>
       <STANDARD/>
       <CONSTANT/>
      </SFPIOPAR>
     </IMPORT_PARAMETERS>
     <EXPORT_PARAMETERS/>
     <TABLE_PARAMETERS/>
     <EXCEPTIONS/>
    </CL_FP_PARAMETERS>
   </cls:CL_FP_PARAMETERS>
   <cls:CL_FP_CODING id="o5">
    <CL_FP_INTERFACE_DATA_CHANGED classVersion="1">
     <INTERFACE_DATA href="#o1"/>
    </CL_FP_INTERFACE_DATA_CHANGED>
    <CL_FP_CODING classVersion="1">
     <INPUT_PARAMETERS>
      <FPPARAMETER>P_TAB</FPPARAMETER>
     </INPUT_PARAMETERS>
     <OUTPUT_PARAMETERS>
      <FPPARAMETER>&lt;FS_TABLE&gt;</FPPARAMETER>
     </OUTPUT_PARAMETERS>
     <INITIALIZATION>
      <FPCLINE>*PARAMETERS:p_tab TYPE tabname.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>DATA:dbtab      TYPE string,</FPCLINE>
      <FPCLINE>     except     TYPE string,</FPCLINE>
      <FPCLINE>     token      TYPE string,</FPCLINE>
      <FPCLINE>     target     TYPE REF TO data,</FPCLINE>
      <FPCLINE>     components TYPE cl_abap_structdescr=&gt;component_table.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>DATA:lt_tab TYPE REF TO data.</FPCLINE>
      <FPCLINE>FIELD-SYMBOLS : &lt;fs_table&gt; TYPE ANY TABLE.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>dbtab = CONV #( p_tab ).</FPCLINE>
      <FPCLINE>except = &apos;mandt&apos;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>DATA:lo_line_type TYPE REF TO cl_abap_structdescr.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>lo_line_type ?= cl_abap_typedescr=&gt;describe_by_name( p_tab ).     &quot;wide cast</FPCLINE>
      <FPCLINE/>
      <FPCLINE>DATA(lo_table_type) = cl_abap_tabledescr=&gt;create( p_line_type = lo_line_type ).</FPCLINE>
      <FPCLINE/>
      <FPCLINE>components = CAST cl_abap_structdescr(</FPCLINE>
      <FPCLINE>  cl_abap_typedescr=&gt;describe_by_name( to_upper( dbtab ) )</FPCLINE>
      <FPCLINE>    )-&gt;get_components( ).</FPCLINE>
      <FPCLINE/>
      <FPCLINE>SPLIT except AT `,` INTO TABLE DATA(columns).</FPCLINE>
      <FPCLINE>LOOP AT columns ASSIGNING FIELD-SYMBOL(&lt;column&gt;).</FPCLINE>
      <FPCLINE>  DELETE components WHERE name = to_upper( condense( &lt;column&gt; ) ).</FPCLINE>
      <FPCLINE>ENDLOOP.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>token =</FPCLINE>
      <FPCLINE>  REDUCE string( INIT s = ``</FPCLINE>
      <FPCLINE>                 FOR &lt;wa&gt; IN components</FPCLINE>
      <FPCLINE>                 NEXT s &amp;&amp;=  COND #( WHEN s = ``  THEN &lt;wa&gt;-name</FPCLINE>
      <FPCLINE>                                     ELSE  `, ` &amp;&amp; &lt;wa&gt;-name ) ).</FPCLINE>
      <FPCLINE/>
      <FPCLINE>DATA(itab_type) =</FPCLINE>
      <FPCLINE> cl_abap_tabledescr=&gt;get(</FPCLINE>
      <FPCLINE>         p_line_type  = cl_abap_structdescr=&gt;get(</FPCLINE>
      <FPCLINE>                           p_components = components )</FPCLINE>
      <FPCLINE>         p_table_kind = cl_abap_tabledescr=&gt;tablekind_std ).</FPCLINE>
      <FPCLINE>CREATE DATA lt_tab TYPE HANDLE itab_type.  &quot;lo_table_type yerine bu geldi</FPCLINE>
      <FPCLINE/>
      <FPCLINE>ASSIGN lt_tab-&gt;* TO &lt;fs_table&gt;.       &quot;dereference pointer</FPCLINE>
      <FPCLINE/>
      <FPCLINE>SELECT (token) FROM (p_tab) INTO CORRESPONDING FIELDS OF TABLE @&lt;fs_table&gt;.</FPCLINE>
      <FPCLINE/>
      <FPCLINE>BREAK gamzey.</FPCLINE>
     </INITIALIZATION>
     <FORMS/>
    </CL_FP_CODING>
   </cls:CL_FP_CODING>
  </asx:heap>
 </asx:abap>
</abapGit>
